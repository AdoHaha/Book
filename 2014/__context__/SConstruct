#!/usr/bin/python
# -*- coding: UTF-8 -*-
# Get articles and directories list

import os, glob

if 'TEXINPUTS' not in os.environ:
    os.environ['TEXINPUTS']=''
os.environ['TEXINPUTS'] = (
    ".:..:../..:../../sty:" +
    os.environ['TEXINPUTS'] )
env = Environment( ENV=os.environ)

def remove_comments(line):
    return line.split('%')[0]

articles = []
artlist = 'artlist.txt'
build = "build"
for line in open(artlist):
    line = remove_comments(line)
    words = line.split()
    if words:
        alias, location = words[:2]
        articles.append([alias, location])

final_pdfs = map((lambda x: "{}/{}/{}.pdf".format(build,x[0],x[0])),articles)

env.Command("pyconbook-2013.pdf",
    final_pdfs,
    "texexec --pdfcopy --result=$TARGET $SOURCES")

for alias, location in articles:
    root = "{}/{}/{}".format(build, alias, alias)
    env.Command(
        root + ".pdf",
        [
            root + ".tex",
            artlist,
            build + "/artpages.inc",
            glob.glob("sty/*"),
            glob.glob("src/" + alias + "/*")
            ],
        [
            "pwd",
            "[ -L src ] || ln -s ../../src/" + alias + " src",
            # "env TEXINPUTS=.:..:../..:../../sty:../../src/" + alias + ": " +
            "texexec --pdf " + alias,
            "mv artpages.inc .. 2>/dev/null || true"
            ],
        chdir = "%s/%s" % (build, alias),
        )
    loc_src  = "src/" + alias + "/text.tex"
    main_src = "../" + location + "/text.tex"
    main_md  = "../" + location + "/text.md"
    diffsrc  = glob.glob("src/" + alias + ".diff")
    if os.path.exists(loc_src):
        env.Command( root + ".tex", loc_src,
                     Copy('$TARGET','$SOURCE') )
    elif os.path.exists(main_src):
        env.Command( root + ".tex", main_src,
                     Copy('$TARGET','$SOURCE') )
    elif os.path.exists(main_md):
        print ">>>" + main_md
        env.Command(
            root + ".tex",
            [main_md] + diffsrc + Glob("src/*.inc.tex"),
            [
                Delete(".tmp"),
                Mkdir(".tmp"),
                (
                    "pandoc -t context --template=src/template.pandoc " + main_md +
                    "| sed -e s/subsubsection/section/ > " +
                    ".tmp/${TARGET.file}"
                    ),
                "cat " + (diffsrc + ["/dev/null"])[0] + " | patch -d .tmp ",
                Copy("$TARGET", ".tmp/${TARGET.file}"),
                ],
           )
    else:
        print "Thing ", main_md
        raise RuntimeError("Gulp")


env.Command("build/artpages.inc",[],[])

# Local Variables:
# mode: python
# End:
